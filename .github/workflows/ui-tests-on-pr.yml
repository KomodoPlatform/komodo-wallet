# Runs UI tests on PRs to ensure the app is working as expected
name: UI Integration tests on PR
run-name: ${{ github.actor }} is running UI tests on PR ðŸš€

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ui_tests:
    name: Test ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45    
    strategy:
      fail-fast: false
      matrix:
        name: [
          web-app-linux,
          web-app-macos,
        ]
        include:
          - name: web-app-linux
            os: ubuntu-latest

          - name: web-app-macos
            os: macos-14

    steps:
      - name: Setup GH Actions
        uses: actions/checkout@v4

      - name: Install Chrome and chromedriver
        if: ${{ matrix.os == 'ubuntu-latest' || runner.name == 'ci-builder-radon' }}
        uses: browser-actions/setup-chrome@v1
        id: setup-chrome
        with:
          chrome-version: 116.0.5845.96
          install-chromedriver: true
          install-dependencies: true

      - name: Add chromedriver to PATH
        if: ${{ matrix.os == 'ubuntu-latest' || runner.name == 'ci-builder-radon' }}
        run: |
          export PATH="${{ steps.setup-chrome.outputs.chrome-path }}:${PATH}"
          export PATH="${{ steps.setup-chrome.outputs.chromedriver-path }}:${PATH}"

          echo "Chrome version: ${{ steps.setup-chrome.outputs.chrome-version }}"
          echo "chromedriver version: $(chromedriver --version)"

      - name: Enable safaridriver (sudo) (MacOS)
        if: ${{ matrix.os == 'macos-latest' || runner.name == 'ci-builder-astatine' }}
        timeout-minutes: 1
        run: |
          defaults write com.apple.Safari IncludeDevelopMenu YES
          defaults write com.apple.Safari AllowRemoteAutomation 1
          sudo /usr/bin/safaridriver --enable || echo "Failed to enable safaridriver!"

      - name: Install Flutter and dependencies
        uses: ./.github/actions/flutter-deps

      - name: Fetch packages and generate assets
        uses: ./.github/actions/generate-assets
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Validate build
        uses: ./.github/actions/validate-build

      - name: Test air_dex chrome (unix) (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' || runner.name == 'ci-builder-radon' }}
        id: tests-chrome
        continue-on-error: true
        timeout-minutes: 35
        env:
          GITHUB_API_PUBLIC_READONLY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chromedriver --port=4444 --silent --enable-chrome-logs --log-path=chrome_console.log &
          dart run_integration_tests.dart -d 'headless' -b '1600,1024' --browser-name=chrome

      - name: Run safaridriver in background (MacOS)
        if: ${{ matrix.os == 'macos-latest' || runner.name == 'ci-builder-astatine' }}
        continue-on-error: true
        run: |
          safaridriver -p 4444 --diagnose &

      - name: Test air_dex safari (MacOS)
        if: ${{ matrix.os == 'macos-latest' || runner.name == 'ci-builder-astatine' }}
        id: tests-safari
        continue-on-error: true
        timeout-minutes: 35
        env:
          GITHUB_API_PUBLIC_READONLY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          flutter pub get
          dart run_integration_tests.dart --browser-name=safari

      - name: Upload logs (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' || runner.name == 'ci-builder-radon' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-chromedriver-logs.zip
          path: ./chrome_console.log

      - name: Upload logs (macOS)
        if: ${{ matrix.os == 'macos-latest' || runner.name == 'ci-builder-astatine' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-safaridriver-logs.zip
          path: ~/Library/Logs/com.apple.WebDriver/

      - name: Generate coverage report
        if: ${{ matrix.os == 'ubuntu-latest' || runner.name == 'ci-builder-radon' }}
        id: test-coverage-report
        timeout-minutes: 35
        uses: ./.github/actions/code-coverage
        with:
          test_file: 'test_integration'

      - name: Fail workflow if tests failed (Linux)
        if: ${{ (matrix.os == 'ubuntu-latest' || runner.name == 'ci-builder-radon') && steps.tests-chrome.outcome == 'failure' }}
        run: exit 1

      - name: Fail workflow if tests failed (MacOS)
        if: ${{ (matrix.os == 'macos-latest' || runner.name == 'ci-builder-astatine') && steps.tests-safari.outcome == 'failure' }}
        run: exit 1
